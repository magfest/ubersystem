# Usage instructions
# 0. Stop any other containers as they all share the same port
# 1. (Optional) Set up EVENTNAME and EVENTYEAR env variables in your bash profile, where EVENTNAME is the event plugin name (e.g., magprime) and EVENTYEAR is the server name in your git config repo (e.g., super2024). If you wish to pull staging config from a git repo, also set CONFIGENV to either `dev` or `staging` (the default is prod). If these aren't in your profile you'll need to set them in your session before running the command below.
# 2. Download all plugins into one root directory; multiple event plugins can live side-by-side
# 3. For each event you want to develop for, create an empty `development-EVENTNAME.ini` in this directory (see step 1 for what EVENTNAME is). The new file does not need to contain anything.
# 4. Run `docker compose -p $EVENTNAME --profile dev up -d`
# 5. Run `env CONFIG_CMD="/usr/local/bin/rebuild-config.sh git $EVENT $YEAR" bash -c 'docker compose -p $EVENTNAME exec web $CONFIG_CMD exec celery-worker $CONFIG_CMD exec celery-beat $CONFIG_CMD'`
#    where EVENT is the config folder name (e.g., `stock` not `magstock`) and year is the config year (e.g., 2023)
# 6. Run `docker compose -p $EVENTNAME restart`
#
# Repeat step 6 whenever you want to reset your config; it will pull from uber-development.ini.template, then the git repo
# When you want into the Python REPL, run `docker compose -p $EVENTNAME restart python-repl && docker attach $EVENTNAME-python-repl`

x-dev-volumes:
  volumes:
    - &extra-plugin-1 $PWD/../${COMPOSE_PROJECT_NAME}/:/app/plugins/${COMPOSE_PROJECT_NAME}
    - &config-file $PWD/development-${COMPOSE_PROJECT_NAME}.ini:/app/plugins/uber/development.ini

services:
  python-repl:
    container_name: ${COMPOSE_PROJECT_NAME}-python-repl
    build: .
    volumes:
      - $PWD:/app/plugins/uber
      - *extra-plugin-1
      - *config-file
      - $PWD/.pythonstartup.py:/app/.pythonstartup.py
    stdin_open: true
    tty: true
    environment:
      - DB_CONNECTION_STRING=postgresql://uber_db:uber_db@db:5432/uber_db
      - PYTHONSTARTUP=/app/.pythonstartup.py
    command: ['/app/env/bin/python3']
    profiles: ["dev"]
    stop_grace_period: 1s
  web:
    extends:
      file: docker-compose.yml
      service: web
    volumes:
      - *extra-plugin-1
      - *config-file
  celery-beat:
    extends:
      file: docker-compose.yml
      service: celery-beat
    volumes:
      - *extra-plugin-1
      - *config-file
  celery-worker:
    extends:
      file: docker-compose.yml
      service: celery-worker
    volumes:
      - *extra-plugin-1
      - *config-file
